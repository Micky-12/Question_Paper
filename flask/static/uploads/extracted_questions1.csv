Question,Course_Code,Course_Name,Marks,Count,Difficulty
1  Describe input buffering scheme in lexical analyzer .  ,CS30 4 , COMPILER DESIGN  ,3,4,
"2  Construct a regular expression to denote a language L over ∑ = {0,1} accepting all strings of 0’s and 1’s that do not contain substring 011   ",CS30 4 , COMPILER DESIGN  ,3,4,
3  Consider the context free grammar S ->aSbS | bSaS | €  Check whether the grammar is ambiguous or not   ,CS30 4 , COMPILER DESIGN  ,3,4,
4  What is Recursive Descent par sing? List the problems faced in designing such a parser.       ,CS30 4 , COMPILER DESIGN  ,3,4,
5 a)  Explain the different phases in the design of a compiler.    b) Find the FIRST and FOLLOW of the non -terminals in the grammar  S->aABe  A->Abc|b  B->d  ,CS30 4 , COMPILER DESIGN  ,9,4,
6 a) Design a recursive descent parser for the grammar   E->E + T | T  T->T*F | F  F->(E) | id    b) Develop  a lexical analyzer for the token identifier .   ,CS30 4 , COMPILER DESIGN  ,9,4,
8   Explain the main actions in a shift reduce parser   ,CS30 4 , COMPILER DESIGN  ,3,4,
9   What are different parsing conflicts in SLR parsing table?   ,CS30 4 , COMPILER DESIGN  ,3,4,
10   What are annotate d parse trees?  Give examples.    ,CS30 4 , COMPILER DESIGN  ,3,4,
11  What are L-attributed definition s and S-attributed definition s in a syntax directed translation scheme?       ,CS30 4 , COMPILER DESIGN  ,3,4,
12 a)  Find the LR(0) items for the grammar  S->SS | a| €.     b)  Explain bottom - up evaluation of s -attributed definitions.   ,CS30 4 , COMPILER DESIGN  ,9,4,
13 a) Derive LALR (1) parsing algorithm for following grammar       S→AS/b  A→SA/a   b) Design a type checker for simple arithmetic operations.   ,CS30 4 , COMPILER DESIGN  ,9,4,
14 a) Explain the syntax directed definition of a simple desk calculator .    Explain operator grammar and operator precedence parsing   ,CS30 4 , COMPILER DESIGN  ,9,4,
15 a) Explain storage organization and storage allocation strategies   ,CS30 4 , COMPILER DESIGN  ,10,4,
16 a) Explain intermediate code generation of an assignment statement   ,CS30 4 , COMPILER DESIGN  ,10,4,
"17 a) Explain  quadruples, triples and dags with an example each.   ",CS30 4 , COMPILER DESIGN  ,10,4,
18 a) Explain the principal sources of optimization   ,CS30 4 , COMPILER DESIGN  ,10,4,
19 a) Explain optimization of basic blocks    b) With suitable examples explain loop optimization.   ,CS30 4 , COMPILER DESIGN  ,10,4,
"1  Draw the state transition diagram showing a DFA for recognizing the language L over the alphabet set Σ = {a, b}:    L = {x | x ∈ Σ* and  the number of a  in x is divisible by 2 or  }.   ", CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
"2  Write a Regular Grammar G for the language: L = { 0n 1m  :n, m >= 1}   ", CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
5  State Myhill -Nerode Theorem .  , CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
"6  Write a Context -Free Grammar for the language L = {wcwr | w ∈ {a,b}*  }, wr  represents  the reverse of w.   ", CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
7  Write the transition  functions of PDA with acceptance by Final State for the language L = {an bn  : n >= 0}.  , CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
8  State Pumping Lemma for Context Free Languages.   , CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
9  Write the formal definition of Context Sensitive Grammar and write the CSG for the language L = { an bn cn | n>=1 } .  , CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
10  Explain Chomsky hierarchy of languages.   , CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,3,3,
"12 a) Define Regular Grammar and write Regular Grammar G for the following language  : L = {x ∈ {a, b} * | x does not ends with ‘bb’ }    b) Obtain the DFA over the alphabet set Σ = {a, b}, equivalent to the regular grammar G with start symbol S and productions:  S  aA | bS , A  aB | bS | a and                    B  aB | bS | a   ", CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,14,3,
13 a) State and explain any three closure properties of Regular Language s.   b) Find the equivalent Regular Expression using Kleen e’s construction for the language represented by the following DFA .                                      b                                             b                                                                                                                                                                                                     , CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,14,3,
"16 a) Construct the Grammars in Chomsky Normal Form generating the set of all strings over {a,b} consisting of equal number of a’s and b’s.    b) Find the Greibach Normal Form for the following Context Free Grammar        SXA | BB ,   B  b | SB,    X  b,     A a  ", CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,14,3,
"17 a) Design a PDA for the language L = {wwr | w ∈ {a,b}*  }. Also illustrate the computation of the PDA on the string ‘aabbaa’ .   b) Construct a CFG to generate L(M) where M = ({p, q}, {, 1}, {X, Z }, δ , q, Z  , Ø } where δ is defined as follows:  δ (q, 0, Z0 ) = (q, XZ 0) δ (q, 0, X)   = (q, XX)  δ (q, 1, X)   = (p, ɛ) δ (p, 1, X)    = (p, ɛ) δ (p, ɛ, X )  = (p, ɛ) δ (p, ɛ, Z0 )  = (p, ɛ)  ", CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,14,3,
"18 a) Using pumping lemma for Context free languages, prove that the language                L = {  an bn cn | n>=1  }.   b) Prove that CFL s are closed under Union, Concatenation and Homomorphism.   ", CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,14,3,
19 a) Design Linear Bounded Automata for the language L = { an bn cn | n>=1 } .  , CST301 ,  FORMAL LANGUAGES AND AUTOMATA THEORY  ,7,3,
